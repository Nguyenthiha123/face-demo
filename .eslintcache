[{"C:\\Users\\DELL G3\\Desktop\\FSOFT\\test1\\react-project\\src\\index.js":"1","C:\\Users\\DELL G3\\Desktop\\FSOFT\\test1\\react-project\\src\\reportWebVitals.js":"2","C:\\Users\\DELL G3\\Desktop\\FSOFT\\test1\\react-project\\src\\App.js":"3","C:\\Users\\DELL G3\\Desktop\\FSOFT\\test1\\react-project\\src\\routers\\Index.js":"4","C:\\Users\\DELL G3\\Desktop\\FSOFT\\test1\\react-project\\src\\component\\Register\\index.js":"5","C:\\Users\\DELL G3\\Desktop\\FSOFT\\test1\\react-project\\src\\component\\Check\\index.js":"6","C:\\Users\\DELL G3\\Desktop\\FSOFT\\test1\\react-project\\src\\routers\\index.js":"7","C:\\Users\\DELL G3\\Desktop\\FSOFT\\test1\\react-project\\src\\component\\Report\\index.js":"8","C:\\Users\\DELL G3\\Desktop\\FSOFT\\test1\\react-project\\src\\component\\Voice\\index.js":"9","C:\\Users\\DELL G3\\Desktop\\FSOFT\\test1\\react-project\\src\\component\\CheckVoice\\index.js":"10","C:\\Users\\DELL G3\\Desktop\\FSOFT\\Reactjs\\fsoft-test33\\src\\index.js":"11","C:\\Users\\DELL G3\\Desktop\\FSOFT\\Reactjs\\fsoft-test33\\src\\reportWebVitals.js":"12","C:\\Users\\DELL G3\\Desktop\\FSOFT\\Reactjs\\fsoft-test33\\src\\App.js":"13","C:\\Users\\DELL G3\\Desktop\\FSOFT\\Reactjs\\fsoft-test33\\src\\routers\\index.js":"14","C:\\Users\\DELL G3\\Desktop\\FSOFT\\Reactjs\\fsoft-test33\\src\\component\\Register\\index.js":"15","C:\\Users\\DELL G3\\Desktop\\FSOFT\\Reactjs\\fsoft-test33\\src\\component\\Voice\\index.js":"16","C:\\Users\\DELL G3\\Desktop\\FSOFT\\Reactjs\\fsoft-test33\\src\\component\\Check\\index.js":"17","C:\\Users\\DELL G3\\Desktop\\FSOFT\\Reactjs\\fsoft-test33\\src\\component\\CheckVoice\\index.js":"18","C:\\Users\\DELL G3\\Desktop\\FSOFT\\Reactjs\\fsoft-test33\\src\\component\\RecognizeHistory\\index.js":"19","C:\\Users\\DELL G3\\Desktop\\FSOFT\\Reactjs\\fsoft-test33\\src\\component\\VerifyHistory\\index.js":"20","C:\\Users\\DELL G3\\Desktop\\FSOFT\\Reactjs\\fsoft-test33\\src\\component\\LayoutHistory\\index.js":"21","C:\\Users\\DELL G3\\Desktop\\FSOFT\\Reactjs\\face-demo\\src\\index.js":"22","C:\\Users\\DELL G3\\Desktop\\FSOFT\\Reactjs\\face-demo\\src\\reportWebVitals.js":"23","C:\\Users\\DELL G3\\Desktop\\FSOFT\\Reactjs\\face-demo\\src\\App.js":"24","C:\\Users\\DELL G3\\Desktop\\FSOFT\\Reactjs\\face-demo\\src\\routers\\index.js":"25","C:\\Users\\DELL G3\\Desktop\\FSOFT\\Reactjs\\face-demo\\src\\component\\Register\\index.js":"26","C:\\Users\\DELL G3\\Desktop\\FSOFT\\Reactjs\\face-demo\\src\\component\\VerifyHistory\\index.js":"27","C:\\Users\\DELL G3\\Desktop\\FSOFT\\Reactjs\\face-demo\\src\\component\\Check\\index.js":"28","C:\\Users\\DELL G3\\Desktop\\FSOFT\\Reactjs\\face-demo\\src\\component\\LayoutHistory\\index.js":"29","C:\\Users\\DELL G3\\Desktop\\FSOFT\\Reactjs\\face-demo\\src\\component\\Voice\\index.js":"30","C:\\Users\\DELL G3\\Desktop\\FSOFT\\Reactjs\\face-demo\\src\\component\\RecognizeHistory\\index.js":"31","C:\\Users\\DELL G3\\Desktop\\FSOFT\\Reactjs\\face-demo\\src\\component\\CheckVoice\\index.js":"32"},{"size":500,"mtime":499162500000,"results":"33","hashOfConfig":"34"},{"size":362,"mtime":499162500000,"results":"35","hashOfConfig":"34"},{"size":195,"mtime":1608109639841,"results":"36","hashOfConfig":"34"},{"size":642,"mtime":1608005079805,"results":"37","hashOfConfig":"38"},{"size":4958,"mtime":1609749968792,"results":"39","hashOfConfig":"34"},{"size":2342,"mtime":1609835173886,"results":"40","hashOfConfig":"34"},{"size":1121,"mtime":1610010503374,"results":"41","hashOfConfig":"34"},{"size":7050,"mtime":1610010416230,"results":"42","hashOfConfig":"34"},{"size":7875,"mtime":1609836497408,"results":"43","hashOfConfig":"34"},{"size":3526,"mtime":1610005981112,"results":"44","hashOfConfig":"34"},{"size":500,"mtime":499162500000,"results":"45","hashOfConfig":"46"},{"size":362,"mtime":499162500000,"results":"47","hashOfConfig":"46"},{"size":195,"mtime":1608109639841,"results":"48","hashOfConfig":"46"},{"size":1438,"mtime":1611047682596,"results":"49","hashOfConfig":"46"},{"size":3610,"mtime":1611025001907,"results":"50","hashOfConfig":"46"},{"size":7866,"mtime":1610445434548,"results":"51","hashOfConfig":"46"},{"size":5230,"mtime":1611047242054,"results":"52","hashOfConfig":"46"},{"size":3688,"mtime":1610508195316,"results":"53","hashOfConfig":"46"},{"size":6249,"mtime":1610525158753,"results":"54","hashOfConfig":"46"},{"size":7025,"mtime":1610610920041,"results":"55","hashOfConfig":"46"},{"size":1517,"mtime":1611045971856,"results":"56","hashOfConfig":"46"},{"size":500,"mtime":499162500000,"results":"57","hashOfConfig":"58"},{"size":362,"mtime":499162500000,"results":"59","hashOfConfig":"58"},{"size":195,"mtime":1608109639841,"results":"60","hashOfConfig":"58"},{"size":494,"mtime":1612286852106,"results":"61","hashOfConfig":"58"},{"size":3610,"mtime":1611025001907,"results":"62","hashOfConfig":"58"},{"size":7025,"mtime":1610610920041,"results":"63","hashOfConfig":"58"},{"size":8160,"mtime":1612262615556,"results":"64","hashOfConfig":"58"},{"size":1517,"mtime":1611045971856,"results":"65","hashOfConfig":"58"},{"size":7866,"mtime":1610445434548,"results":"66","hashOfConfig":"58"},{"size":6249,"mtime":1610525158753,"results":"67","hashOfConfig":"58"},{"size":3688,"mtime":1610508195316,"results":"68","hashOfConfig":"58"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},"10gkjkq",{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"pcvygj",{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"71"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"71"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"86","messages":"87","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"71"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"71"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},"df9924",{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"96"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"96"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"96"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"115"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"96"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"96"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"96"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},"qimzx7",{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"134","messages":"135","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"127"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"127"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"127"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"127"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"145","messages":"146","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"127"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\DELL G3\\Desktop\\FSOFT\\test1\\react-project\\src\\index.js",[],["149","150"],"C:\\Users\\DELL G3\\Desktop\\FSOFT\\test1\\react-project\\src\\reportWebVitals.js",[],"C:\\Users\\DELL G3\\Desktop\\FSOFT\\test1\\react-project\\src\\App.js",[],"C:\\Users\\DELL G3\\Desktop\\FSOFT\\test1\\react-project\\src\\routers\\Index.js",["151"],"C:\\Users\\DELL G3\\Desktop\\FSOFT\\test1\\react-project\\src\\component\\Register\\index.js",["152"],"import React from 'react'\r\nimport axios from 'axios'\r\nimport { useForm } from 'react-hook-form'\r\nimport { useHistory } from 'react-router-dom'\r\nimport Swal from 'sweetalert2'\r\nconst form = {\r\n    padding: '30px',\r\n    position: 'relative',\r\n    left: '380px'\r\n};\r\nconst mb = {\r\n    width: '500px'\r\n};\r\nconst label = {\r\n    float: 'left'\r\n};\r\nconst button = {\r\n    float: 'left',\r\n    position: 'relative',\r\n    top: '20px'\r\n};\r\nconst span = {\r\n    color: 'red'\r\n};\r\n\r\nconst Register = props => {\r\n    const { register, handleSubmit, watch, errors } = useForm();\r\n    const onSubmit = data => addRegister(data);\r\n    const history = useHistory()\r\n\r\n    const addRegister = async (e) => {\r\n        const Data = new FormData();\r\n        console.log(e.images1[0])\r\n        Data.append('id', 64646);\r\n        Data.append('image1', e.images1[0]);\r\n        Data.append('image2', e.images2[0]);\r\n        Data.append('image3', e.images3[0]);\r\n        Data.append('name', e.name);\r\n        Data.append('dob', e.dob);\r\n        console.log(Data)\r\n        const data = await axios.post('http://52.221.58.53:2020/api/register', Data, {\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data'\r\n            },\r\n        })\r\n        console.log(data)\r\n\r\n        history.push('/register')\r\n        Swal.fire(\r\n            'Thành công',\r\n            'You clicked the button!',\r\n            'success'\r\n        )\r\n    }\r\n    return (\r\n        <div className=\"container\">\r\n\r\n            <form style={form} onSubmit={handleSubmit(onSubmit)}>``\r\n                <h1 style={{ position: 'relative', left: '-370px' }} className=\"text-success\">Register</h1>\r\n                <div className=\"mb-3\" style={mb}>\r\n                    <label style={label} htmlFor=\"formFile\" className=\"form-label\">Hình ảnh<span style={span}>*</span></label>\r\n                    <input name='images1' ref={register({ required: true })} className=\"form-control\" type=\"file\" id=\"formFile\" />\r\n                    <small className=\"form-text text-danger\">\r\n                        {errors.name && errors.name.type === \"required\" && <span>Vui lòng không để trống</span>}\r\n                    </small>\r\n                </div>\r\n\r\n                <div className=\"mb-3\" style={mb}>\r\n                    <label style={label} htmlFor=\"formFile\" className=\"form-label\">Hình ảnh<span style={span}>*</span></label>\r\n                    <input name='images2' ref={register({ required: true })} className=\"form-control\" type=\"file\" id=\"formFile\" />\r\n                    <small className=\"form-text text-danger\">\r\n                        {errors.name && errors.name.type === \"required\" && <span>Vui lòng không để trống</span>}\r\n                    </small>\r\n                </div>\r\n\r\n                <div className=\"mb-3\" style={mb}>\r\n                    <label style={label} htmlFor=\"formFile\" className=\"form-label\">Hình ảnh<span style={span}>*</span></label>\r\n                    <input name='images3' ref={register({ required: true })} className=\"form-control\" type=\"file\" id=\"formFile\" />\r\n                    <small className=\"form-text text-danger\">\r\n                        {errors.name && errors.name.type === \"required\" && <span>Vui lòng không để trống</span>}\r\n                    </small>\r\n                </div>\r\n\r\n                <div className=\"mb-3\" style={mb}>\r\n                    <label style={label} htmlFor=\"exampleInputEmail1\" className=\"form-label\">Họ tên<span style={span}>*</span></label>\r\n                    <input name='name' ref={register({ required: true, minLength: 3 })} className=\"form-control\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\" />\r\n                    <small className=\"form-text text-danger\">\r\n                        {errors.name && errors.name.type === \"required\" && <span>Vui lòng không để trống</span>}\r\n                        {errors.name && errors.name.type === \"minLength\" && <span>Tên phải lớn hơn hoặc bằng 3 ký tự</span>}\r\n                    </small>\r\n                </div>\r\n\r\n                <div className=\"mb-3\" style={mb}>\r\n                    <label style={label} htmlFor=\"exampleInputPassword1\" className=\"form-label\">Ngày sinh<span style={span}>*</span></label>\r\n                    <input name='dob' type='date' ref={register({ required: true, minLength: 3 })} className=\"form-control\" />\r\n                    <small className=\"form-text text-danger\">\r\n                        {errors.name && errors.name.type === \"required\" && <span>Vui lòng không để trống</span>}\r\n                        {errors.name && errors.name.type === \"minLength\" && <span>Tên phải lớn hơn hoặc bằng 3 ký tự</span>}\r\n                    </small>\r\n                </div>\r\n\r\n                <button style={button} type=\"submit\" className=\"btn btn-success\">Submit</button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nRegister.propTypes = {\r\n}\r\n\r\nexport default Register\r\n","C:\\Users\\DELL G3\\Desktop\\FSOFT\\test1\\react-project\\src\\component\\Check\\index.js",["153","154"],"import React from 'react'\r\nimport axios from 'axios'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { useForm } from 'react-hook-form'\r\nimport Swal from 'sweetalert2'\r\n\r\n\r\nconst form = {\r\n    padding: '30px',\r\n    position: 'relative',\r\n    left: '380px'\r\n};\r\nconst mb = {\r\n    width: '500px'\r\n};\r\nconst label = {\r\n    float: 'left'\r\n};\r\nconst button = {\r\n    position: 'relative',\r\n    left: '-370px',\r\n    top: '30px'\r\n};\r\n\r\nconst Check = props => {\r\n    const history = useHistory()\r\n    const { register, handleSubmit, watch, errors } = useForm();\r\n    const onSubmit = dataCheck => addCheck(dataCheck);\r\n\r\n    const addCheck = async (e) => {\r\n        const Data = new FormData();\r\n        Data.append('image1', e.images1[0]);\r\n        console.log(Data)\r\n        const dataCheck = await axios.post('http://52.221.58.53:2020/api/recognize', Data, {\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data'\r\n            },\r\n        })\r\n        const res = dataCheck.data;\r\n        if (res.status === 200) {\r\n            const data = res.data;\r\n            console.log(data);\r\n         \r\n            document.write('Ho ten:' + data.name + '<br/>' + 'Tuoi:' + data.dob);\r\n\r\n\r\n        } else {\r\n\r\n            history.push('/check')\r\n            Swal.fire(\r\n                'Hinh anh khong chinh xac',\r\n                'You clicked the button!',\r\n                'error'\r\n            )\r\n        }\r\n        console.log(dataCheck)\r\n\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <h1 className=\"text-success\">Recognize</h1>\r\n            <form style={form} onSubmit={handleSubmit(onSubmit)}>\r\n                <div className=\"mb-3\" style={mb}>\r\n                    <label style={label} htmlFor=\"formFile\" className=\"form-label\">Hình ảnh</label>\r\n                    <input name='images1' ref={register({ required: true })} className=\"form-control\" type=\"file\" id=\"formFile\" />\r\n                    <small className=\"form-text text-danger\">\r\n                        {errors.name && errors.name.type === \"required\" && <span>Vui lòng không để trống</span>}\r\n                    </small>\r\n                </div>\r\n\r\n                <button style={button} type=\"submit\" className=\"btn btn-success\">Submit</button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\nexport default Check\r\n","C:\\Users\\DELL G3\\Desktop\\FSOFT\\test1\\react-project\\src\\routers\\index.js",["155"],"C:\\Users\\DELL G3\\Desktop\\FSOFT\\test1\\react-project\\src\\component\\Report\\index.js",["156","157","158","159","160","161"],"C:\\Users\\DELL G3\\Desktop\\FSOFT\\test1\\react-project\\src\\component\\Voice\\index.js",["162"],"import React from 'react'\r\nimport axios from 'axios'\r\nimport { useForm } from 'react-hook-form'\r\nimport { useHistory } from 'react-router-dom'\r\nimport Swal from 'sweetalert2'\r\nconst form = {\r\n    padding: '100px',\r\n    position: 'relative',\r\n    left: '380px'\r\n};\r\nconst mb = {\r\n    width: '400px',\r\n    'margin-left': '120px',\r\n};\r\nconst label = {\r\n    float: 'left'\r\n};\r\nconst button = {\r\n    position: 'relative',\r\n    top: '20px'\r\n};\r\nconst span = {\r\n    color: 'red'\r\n};\r\n\r\n\r\nconst Voice = props => {\r\n    const { register, handleSubmit, watch, errors } = useForm();\r\n    const onSubmit = data => voice(data);\r\n    const history = useHistory()\r\n\r\n    const voice = async (e) => {\r\n        const Data = new FormData();\r\n        console.log(e.audios1[0])\r\n        if (e.audios1[0] != null || undefined) {\r\n            Data.append('audios', e.audios1[0])\r\n        }\r\n        if (e.audios2[0] != null || undefined) {\r\n            Data.append('audios', e.audios2[0])\r\n        }\r\n        if (e.audios3[0] != null || undefined) {\r\n            Data.append('audios', e.audios3[0])\r\n        }\r\n\r\n        if (e.audios1[0] != null || undefined) {\r\n            Data.append('text[]', e.text1)\r\n        }\r\n        if (e.audios2[0] != null || undefined) {\r\n            Data.append('text[]', e.text2)\r\n        }\r\n        if (e.audios3[0] != null || undefined) {\r\n            Data.append('text[]', e.text3)\r\n        }\r\n        Data.append('name', e.name)\r\n\r\n        const data = await axios.post('http://52.221.81.214:4556/api/v1/voice/register', Data, {\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data'\r\n            },\r\n        })\r\n        console.log(data)\r\n\r\n        history.push('/voice')\r\n        Swal.fire(\r\n            'Thành công',\r\n            'You clicked the button!',\r\n            'success'\r\n        )\r\n    }\r\n    return (\r\n        <div className=\"container\">\r\n            <form onSubmit={handleSubmit(onSubmit)}>\r\n                <h1 style={{}} className=\"text-success\">Register Voice</h1>\r\n                <div className=\"row\">\r\n                    <div className=\"col-6\">\r\n                        <div className=\"mb-3\" style={mb}>\r\n                            <label style={label} htmlFor=\"formFile\" className=\"form-label\">Giọng nói<span style={span}>*</span></label>\r\n                            <input name='audios1' ref={register({ required: true })} className=\"form-control\" type=\"file\" accept=\"audio\" id=\"formFile\" />\r\n                            <small className=\"form-text text-danger\">\r\n                                {errors.name && errors.name.type === \"required\" && <span>Vui lòng không để trống</span>}\r\n                            </small>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-6\">\r\n                        <div className=\"mb-3\" style={mb}>\r\n                            <label style={label} htmlFor=\"exampleInputEmail1\" className=\"form-label\">Nội dung<span style={span}>*</span></label>\r\n                            <input name='text1' ref={register({ required: true, minLength: 3 })} className=\"form-control\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\" />\r\n                            <small className=\"form-text text-danger\">\r\n                                {errors.name && errors.name.type === \"required\" && <span>Vui lòng không để trống</span>}\r\n                                {errors.name && errors.name.type === \"minLength\" && <span>Tên phải lớn hơn hoặc bằng 3 ký tự</span>}\r\n                            </small>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"row\">\r\n                    <div className=\"col-6\">\r\n                        <div className=\"mb-3\" style={mb}>\r\n                            <label style={label} htmlFor=\"formFile\" className=\"form-label\">Giọng nói<span style={span}>*</span></label>\r\n                            <input name='audios2' ref={register({ required: true })} className=\"form-control\" type=\"file\" accept=\"audio\" id=\"formFile\" />\r\n                            <small className=\"form-text text-danger\">\r\n                                {errors.name && errors.name.type === \"required\" && <span>Vui lòng không để trống</span>}\r\n                            </small>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-6\">\r\n                        <div className=\"mb-3\" style={mb}>\r\n                            <label style={label} htmlFor=\"exampleInputEmail1\" className=\"form-label\">Nội dung<span style={span}>*</span></label>\r\n                            <input name='text2' ref={register({ required: true, minLength: 3 })} className=\"form-control\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\" />\r\n                            <small className=\"form-text text-danger\">\r\n                                {errors.name && errors.name.type === \"required\" && <span>Vui lòng không để trống</span>}\r\n                                {errors.name && errors.name.type === \"minLength\" && <span>Tên phải lớn hơn hoặc bằng 3 ký tự</span>}\r\n                            </small>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"row\">\r\n                    <div className=\"col-6\">\r\n                        <div className=\"mb-3\" style={mb}>\r\n                            <label style={label} htmlFor=\"formFile\" className=\"form-label\">Giọng nói<span style={span}>*</span></label>\r\n                            <input name='audios3' ref={register({ required: true })} className=\"form-control\" type=\"file\" accept=\"audio\" id=\"formFile\" />\r\n                            <small className=\"form-text text-danger\">\r\n                                {errors.name && errors.name.type === \"required\" && <span>Vui lòng không để trống</span>}\r\n                            </small>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-6\">\r\n                        <div className=\"mb-3\" style={mb}>\r\n                            <label style={label} htmlFor=\"exampleInputEmail1\" className=\"form-label\">Nội dung<span style={span}>*</span></label>\r\n                            <input name='text3' ref={register({ required: true, minLength: 3 })} className=\"form-control\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\" />\r\n                            <small className=\"form-text text-danger\">\r\n                                {errors.name && errors.name.type === \"required\" && <span>Vui lòng không để trống</span>}\r\n                                {errors.name && errors.name.type === \"minLength\" && <span>Tên phải lớn hơn hoặc bằng 3 ký tự</span>}\r\n                            </small>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"mb-3\" style={mb}>\r\n                    <label style={label} htmlFor=\"exampleInputEmail1\" className=\"form-label\">Họ tên<span style={span}>*</span></label>\r\n                    <input name='name' ref={register({ required: true, minLength: 3 })} className=\"form-control\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\" />\r\n                    <small className=\"form-text text-danger\">\r\n                        {errors.name && errors.name.type === \"required\" && <span>Vui lòng không để trống</span>}\r\n                        {errors.name && errors.name.type === \"minLength\" && <span>Tên phải lớn hơn hoặc bằng 3 ký tự</span>}\r\n                    </small>\r\n                </div>\r\n\r\n\r\n                <button style={button} type=\"submit\" className=\"btn btn-success\">Submit</button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nVoice.propTypes = {\r\n\r\n}\r\n\r\nexport default Voice\r\n","C:\\Users\\DELL G3\\Desktop\\FSOFT\\test1\\react-project\\src\\component\\CheckVoice\\index.js",["163","164","165"],"import React, { useState } from 'react'\r\nimport axios from 'axios'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { useForm } from 'react-hook-form'\r\nimport Swal from 'sweetalert2'\r\n\r\n\r\nconst form = {\r\n    // padding: '30px',\r\n    // position: 'relative',\r\n    // left: '380px'\r\n    margin: 'auto'\r\n};\r\nconst mb = {\r\n    width: '500px'\r\n};\r\nconst label = {\r\n    float: 'left'\r\n};\r\nconst button = {\r\n    position: 'relative',\r\n    left: '-370px',\r\n    top: '30px'\r\n};\r\nconst table = {\r\n    width: \"900px\",\r\n    margin: \"auto\",\r\n    position: \"relative\",\r\n    top: \"100px\"\r\n};\r\n\r\nconst CheckVoice = props => {\r\n    const history = useHistory()\r\n    const { register, handleSubmit, watch, errors } = useForm();\r\n    const users = [];\r\n    const [reportData, setData] = useState(users)\r\n    const onSubmit = dataCheck => Check(dataCheck);\r\n    const makeId = (length) => {\r\n        var result = '';\r\n        var characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\r\n        var charactersLength = characters.length;\r\n        for (var i = 0; i < length; i++) {\r\n            result += characters.charAt(Math.floor(Math.random() * charactersLength));\r\n        }\r\n        return result;\r\n    }\r\n\r\n    const Check = async (e) => {\r\n        const Data = new FormData();\r\n        Data.append('requestId', makeId(16));\r\n        Data.append('audious', e.audious1[0]);\r\n        // console.log(Data)\r\n        const dataCheck = await axios.post('http://52.221.81.214:4556/api/v1/voice/identify', Data, {\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data'\r\n            },\r\n        })\r\n\r\n        const res = dataCheck.data;\r\n        if (res.ErrorCode === 0) {\r\n            const data = res.Data;\r\n            console.log(data);\r\n        }\r\n        else {\r\n            history.push('/checkvoice')\r\n            Swal.fire(\r\n                'Giong noi khong chinh xac',\r\n                'You clicked the button!',\r\n                'error'\r\n            )\r\n        }\r\n        console.log(dataCheck)\r\n    }\r\n    return (\r\n        <div className='container'>\r\n\r\n\r\n\r\n            <h1 className=\"text-success\">Recognize Voice</h1>\r\n            <form style={form} onSubmit={handleSubmit(onSubmit)}>\r\n\r\n                <div className=\"mb-3\" style={mb}>\r\n                    <label style={label} htmlFor=\"formFile\" className=\"form-label\">Giọng nói</label>\r\n                    <input name='audious1' ref={register({ required: true })} className=\"form-control\" type=\"file\" id=\"formFile\" />\r\n                    <small className=\"form-text text-danger\">\r\n                        {errors.name && errors.name.type === \"required\" && <span>Vui lòng không để trống</span>}\r\n                    </small>\r\n                </div>\r\n                <button style={button} type=\"submit\" className=\"btn btn-success\">Submit</button>\r\n            </form>\r\n\r\n            <table style={table} className=\"table\">\r\n                <thead style={{ 'background-color': '#198754', color: 'white' }} className=\"thead-dark\">\r\n                    <tr>\r\n                        <th scope=\"col\">ID</th>\r\n                        <th scope=\"col\">Tên</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <tr>\r\n                        <th scope=\"row\">1</th>\r\n                        <td>hà</td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nCheckVoice.propTypes = {\r\n\r\n}\r\n\r\nexport default CheckVoice\r\n","C:\\Users\\DELL G3\\Desktop\\FSOFT\\Reactjs\\fsoft-test33\\src\\index.js",[],["166","167"],"C:\\Users\\DELL G3\\Desktop\\FSOFT\\Reactjs\\fsoft-test33\\src\\reportWebVitals.js",[],"C:\\Users\\DELL G3\\Desktop\\FSOFT\\Reactjs\\fsoft-test33\\src\\App.js",[],"C:\\Users\\DELL G3\\Desktop\\FSOFT\\Reactjs\\fsoft-test33\\src\\routers\\index.js",["168","169","170","171","172","173","174"],"C:\\Users\\DELL G3\\Desktop\\FSOFT\\Reactjs\\fsoft-test33\\src\\component\\Register\\index.js",["175"],"import React from 'react'\r\nimport axios from 'axios'\r\nimport { useForm } from 'react-hook-form'\r\nimport { useHistory } from 'react-router-dom'\r\nimport Swal from 'sweetalert2'\r\nconst form = {\r\n    margin: 'auto'\r\n};\r\nconst mb = {\r\n    width: '500px',\r\n    margin: 'auto'\r\n};\r\nconst label = {\r\n    float: 'left'\r\n};\r\nconst button = {\r\n    margin: 'auto'\r\n\r\n};\r\nconst span = {\r\n    color: 'red'\r\n};\r\n\r\nconst Register = props => {\r\n    const { register, handleSubmit, watch, errors } = useForm();\r\n    const onSubmit = data => addRegister(data);\r\n    const history = useHistory()\r\n\r\n    const addRegister = async (e) => {\r\n        const Data = new FormData();\r\n        // console.log(e.images1[0])\r\n        Data.append('image', e.image[0]);\r\n        Data.append('name', e.name);\r\n\r\n        console.log(Data)\r\n        const data = await axios.post('https://facedemo-api.dev.trandata.io/api/v1/facedemo/register', Data, {\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data'\r\n            },\r\n        })\r\n        console.log(data)\r\n\r\n        history.push('/')\r\n        Swal.fire(\r\n            'Thành công',\r\n            'You clicked the button!',\r\n            'success'\r\n        )\r\n    }\r\n    return (\r\n        <div className=\"container\">\r\n            <form style={form} onSubmit={handleSubmit(onSubmit)}>\r\n                <h1 style={{ margin: 'auto' }} className=\"text-dark\">Register</h1>\r\n                <div className=\"mb-3\" style={mb}>\r\n                    <label style={label} htmlFor=\"formFile\" className=\"form-label\">Hình ảnh<span style={span}>*</span></label>\r\n                    <input name='image' ref={register({ required: true })} className=\"form-control\" type=\"file\" id=\"formFile\" />\r\n                    <small className=\"form-text text-danger\">\r\n                        {errors.name && errors.name.type === \"required\" && <span>Vui lòng không để trống</span>}\r\n                    </small>\r\n                </div>\r\n\r\n                <div className=\"mb-3\" style={mb}>\r\n                    <label style={label} htmlFor=\"exampleInputEmail1\" className=\"form-label\">Họ tên<span style={span}>*</span></label>\r\n                    <input name='name' ref={register({ required: true, minLength: 3 })} className=\"form-control\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\" />\r\n                    <small className=\"form-text text-danger\">\r\n                        {errors.name && errors.name.type === \"required\" && <span>Vui lòng không để trống</span>}\r\n                        {errors.name && errors.name.type === \"minLength\" && <span>Tên phải lớn hơn hoặc bằng 3 ký tự</span>}\r\n                    </small>\r\n                </div>\r\n\r\n                {/* <div className=\"mb-3\" style={mb}>\r\n                    <label style={label} htmlFor=\"exampleInputPassword1\" className=\"form-label\">Ngày sinh<span style={span}>*</span></label>\r\n                    <input name='dob' type='date' ref={register({ required: true, minLength: 3 })} className=\"form-control\" />\r\n                    <small className=\"form-text text-danger\">\r\n                        {errors.name && errors.name.type === \"required\" && <span>Vui lòng không để trống</span>}\r\n                        {errors.name && errors.name.type === \"minLength\" && <span>Tên phải lớn hơn hoặc bằng 3 ký tự</span>}\r\n                    </small>\r\n                </div> */}\r\n\r\n                <button style={button} type=\"submit\" className=\"btn btn-dark\">Submit</button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nRegister.propTypes = {\r\n}\r\n\r\nexport default Register\r\n","C:\\Users\\DELL G3\\Desktop\\FSOFT\\Reactjs\\fsoft-test33\\src\\component\\Voice\\index.js",["176"],"import React from 'react'\r\nimport axios from 'axios'\r\nimport { useForm } from 'react-hook-form'\r\nimport { useHistory } from 'react-router-dom'\r\nimport Swal from 'sweetalert2'\r\nconst form = {\r\n    padding: '100px',\r\n    position: 'relative',\r\n    left: '380px'\r\n};\r\nconst mb = {\r\n    width: '400px',\r\n    'margin-left': '120px',\r\n};\r\nconst label = {\r\n    float: 'left'\r\n};\r\nconst button = {\r\n    position: 'relative',\r\n    top: '20px'\r\n};\r\nconst span = {\r\n    color: 'red'\r\n};\r\n\r\n\r\nconst Voice = props => {\r\n    const { register, handleSubmit, watch, errors } = useForm();\r\n    const onSubmit = data => voice(data);\r\n    const history = useHistory()\r\n\r\n    const voice = async (e) => {\r\n        const Data = new FormData();\r\n        console.log(e.audios1[0])\r\n        if (e.audios1[0] != null || undefined) {\r\n            Data.append('audios', e.audios1[0])\r\n        }\r\n        if (e.audios2[0] != null || undefined) {\r\n            Data.append('audios', e.audios2[0])\r\n        }\r\n        if (e.audios3[0] != null || undefined) {\r\n            Data.append('audios', e.audios3[0])\r\n        }\r\n\r\n\r\n        if (e.audios1[0] != null || undefined) {\r\n            Data.append('text[]', e.text1)\r\n        }\r\n        if (e.audios2[0] != null || undefined) {\r\n            Data.append('text[]', e.text2)\r\n        }\r\n        if (e.audios3[0] != null || undefined) {\r\n            Data.append('text[]', e.text3)\r\n        }\r\n        Data.append('name', e.name)\r\n\r\n        const data = await axios.post('http://52.221.81.214:4556/api/v1/voice/register', Data, {\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data'\r\n            },\r\n        })\r\n        console.log(data)\r\n\r\n        history.push('/voice')\r\n        Swal.fire(\r\n            'Thành công',\r\n            'You clicked the button!',\r\n            'success'\r\n        )\r\n    }\r\n    return (\r\n        <div className=\"container\">\r\n            <form onSubmit={handleSubmit(onSubmit)}>\r\n                <h1 className=\"text-success\">Register Voice</h1>\r\n                <div className=\"row\">\r\n                    <div className=\"col-6\">\r\n                        <div className=\"mb-3\" style={mb}>\r\n                            <label style={label} htmlFor=\"formFile\" className=\"form-label\">Giọng nói<span style={span}>*</span></label>\r\n                            <input name='audios1' ref={register({ required: true })} className=\"form-control\" type=\"file\" accept=\"audio\" id=\"formFile\" />\r\n                            <small className=\"form-text text-danger\">\r\n                                {errors.name && errors.name.type === \"required\" && <span>Vui lòng không để trống</span>}\r\n                            </small>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-6\">\r\n                        <div className=\"mb-3\" style={mb}>\r\n                            <label style={label} htmlFor=\"exampleInputEmail1\" className=\"form-label\">Nội dung<span style={span}>*</span></label>\r\n                            <input name='text1' ref={register({ required: true, minLength: 3 })} className=\"form-control\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\" />\r\n                            <small className=\"form-text text-danger\">\r\n                                {errors.name && errors.name.type === \"required\" && <span>Vui lòng không để trống</span>}\r\n                                {errors.name && errors.name.type === \"minLength\" && <span>Tên phải lớn hơn hoặc bằng 3 ký tự</span>}\r\n                            </small>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"row\">\r\n                    <div className=\"col-6\">\r\n                        <div className=\"mb-3\" style={mb}>\r\n                            <label style={label} htmlFor=\"formFile\" className=\"form-label\">Giọng nói<span style={span}>*</span></label>\r\n                            <input name='audios2' ref={register({ required: true })} className=\"form-control\" type=\"file\" accept=\"audio\" id=\"formFile\" />\r\n                            <small className=\"form-text text-danger\">\r\n                                {errors.name && errors.name.type === \"required\" && <span>Vui lòng không để trống</span>}\r\n                            </small>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-6\">\r\n                        <div className=\"mb-3\" style={mb}>\r\n                            <label style={label} htmlFor=\"exampleInputEmail1\" className=\"form-label\">Nội dung<span style={span}>*</span></label>\r\n                            <input name='text2' ref={register({ required: true, minLength: 3 })} className=\"form-control\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\" />\r\n                            <small className=\"form-text text-danger\">\r\n                                {errors.name && errors.name.type === \"required\" && <span>Vui lòng không để trống</span>}\r\n                                {errors.name && errors.name.type === \"minLength\" && <span>Tên phải lớn hơn hoặc bằng 3 ký tự</span>}\r\n                            </small>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"row\">\r\n                    <div className=\"col-6\">\r\n                        <div className=\"mb-3\" style={mb}>\r\n                            <label style={label} htmlFor=\"formFile\" className=\"form-label\">Giọng nói<span style={span}>*</span></label>\r\n                            <input name='audios3' ref={register({ required: true })} className=\"form-control\" type=\"file\" accept=\"audio\" id=\"formFile\" />\r\n                            <small className=\"form-text text-danger\">\r\n                                {errors.name && errors.name.type === \"required\" && <span>Vui lòng không để trống</span>}\r\n                            </small>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-6\">\r\n                        <div className=\"mb-3\" style={mb}>\r\n                            <label style={label} htmlFor=\"exampleInputEmail1\" className=\"form-label\">Nội dung<span style={span}>*</span></label>\r\n                            <input name='text3' ref={register({ required: true, minLength: 3 })} className=\"form-control\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\" />\r\n                            <small className=\"form-text text-danger\">\r\n                                {errors.name && errors.name.type === \"required\" && <span>Vui lòng không để trống</span>}\r\n                                {errors.name && errors.name.type === \"minLength\" && <span>Tên phải lớn hơn hoặc bằng 3 ký tự</span>}\r\n                            </small>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"mb-3\" style={mb}>\r\n                    <label style={label} htmlFor=\"exampleInputEmail1\" className=\"form-label\">Họ tên<span style={span}>*</span></label>\r\n                    <input name='name' ref={register({ required: true, minLength: 3 })} className=\"form-control\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\" />\r\n                    <small className=\"form-text text-danger\">\r\n                        {errors.name && errors.name.type === \"required\" && <span>Vui lòng không để trống</span>}\r\n                        {errors.name && errors.name.type === \"minLength\" && <span>Tên phải lớn hơn hoặc bằng 3 ký tự</span>}\r\n                    </small>\r\n                </div>\r\n\r\n\r\n                <button style={button} type=\"submit\" className=\"btn btn-success\">Submit</button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nVoice.propTypes = {\r\n\r\n}\r\n\r\nexport default Voice\r\n","C:\\Users\\DELL G3\\Desktop\\FSOFT\\Reactjs\\fsoft-test33\\src\\component\\Check\\index.js",["177","178","179","180","181","182"],"import React, { useState } from 'react'\r\nimport axios from 'axios'\r\nimport { useForm } from 'react-hook-form'\r\nimport Swal from 'sweetalert2'\r\n\r\nconst mb = {\r\n    width: '500px',\r\n    margin: 'auto'\r\n};\r\nconst button = {\r\n    margin: 'auto',\r\n    marginTop: \"15px\"\r\n};\r\nconst table = {\r\n    width: \"900px\",\r\n    margin: \"auto\",\r\n    position: \"relative\",\r\n    top: \"100px\"\r\n};\r\n\r\nconst Check = props => {\r\n    const { register, handleSubmit, watch, errors } = useForm();\r\n    const users = [];\r\n    const [checkData, setData] = useState(users);\r\n    const [picture, setPicture] = useState(null);\r\n    const [imgData, setImgData] = useState(null);\r\n    const onSubmit = dataCheck => addCheck(dataCheck);\r\n\r\n    const addCheck = async (e) => {\r\n        const Data = new FormData();\r\n        Data.append('image', e.image[0]);\r\n        const dataCheck = await axios.post('https://facedemo-api.dev.trandata.io/api/v1/facedemo/recognition', Data, {\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data'\r\n            },\r\n        })\r\n        const res = dataCheck.data;\r\n        if (res.ErrorCode === 0) {\r\n            const data = res.Data;\r\n            setData(data.faces);\r\n            console.log(data);\r\n            drawImage(data.faces[0].box[0], data.faces[0].box[1], data.faces[0].box[2], data.faces[0].box[3]);\r\n\r\n        } else {\r\n            Swal.fire(\r\n                'The image is not correct',\r\n                'You clicked the button!',\r\n                'error'\r\n            )\r\n        }\r\n    }\r\n\r\n    //upload file ảnh\r\n    const onChangePicture = e => {\r\n        if (e.target.files[0]) {\r\n            setPicture(e.target.files[0]);\r\n            const reader = new FileReader();\r\n            reader.addEventListener(\"load\", () => {\r\n                setImgData(reader.result);\r\n            });\r\n            reader.readAsDataURL(e.target.files[0]);\r\n        }\r\n    }\r\n\r\n    // ve anh truoc khi submit\r\n    const handleImageLoad = (event) => {\r\n        const { target } = event;\r\n        let counter = 0;\r\n        //khi submit sẽ upload ảnh của hàm done\r\n        const done = () => {\r\n            // const imageHeight = target.clientHeight;\r\n            // const imageWidth = target.clientWidth;\r\n            const img = document.getElementById(\"scream\");\r\n            const imageHeight = img.height;\r\n            const imageWidth = img.width;\r\n            loadImage(imageHeight, imageWidth, img)\r\n        };\r\n        done();\r\n    };\r\n\r\n    //ve anh\r\n    const loadImage = (imageHeight, imageWidth, img) => {\r\n        const c = document.getElementById(\"myCanvas\");\r\n        const ctx = c.getContext(\"2d\");\r\n        c.width = imageWidth;\r\n        c.height = imageHeight;\r\n        ctx.drawImage(img, 0, 0);\r\n    }\r\n\r\n    // ve anh sau khi co data\r\n    const drawImage = (x_min, y_min, x_max, y_max) => {\r\n        const c = document.getElementById(\"myCanvas\");\r\n        const ctx = c.getContext(\"2d\");\r\n        ctx.beginPath();\r\n        ctx.rect(x_min, y_min, x_max - x_min, y_max - y_min);\r\n        ctx.lineWidth = 7;\r\n        ctx.strokeStyle = 'black';\r\n        ctx.stroke();\r\n    }\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <h1 className=\"text-dark\">Recognize</h1>\r\n            <form onSubmit={handleSubmit(onSubmit)}>\r\n                <div className=\"mb-3\" style={mb}>\r\n\r\n                    <label htmlFor=\"formFile\" className=\"form-label\">Images</label>\r\n                    <input ref=\"window\" onChange={onChangePicture} name='image' ref={register({ required: true })} className=\"form-control\" type=\"file\" id=\"formFile\" />\r\n                    <div className=\"previewProfilePic\" style={{ marginLeft: \"90px\" }}>\r\n                        {/* <img className=\"playerProfilePic_home_tile\" style={{ marginTop: '18px', objectFit: 'cover' }} width={200} height={260} src={imgData} /> */}\r\n                    </div>\r\n\r\n                    <small className=\"form-text text-danger\">\r\n                        {errors.name && errors.name.type === \"required\" && <span>Vui lòng không để trống</span>}\r\n                    </small>\r\n                </div>\r\n                <div >\r\n                    <img id=\"scream\" style={{ display: 'none' }} src={imgData} onLoad={handleImageLoad} />\r\n                    <canvas style={{ width: '150px' }} id=\"myCanvas\" />\r\n                </div>\r\n                <button style={button} type=\"submit\" className=\"btn btn-dark\">Submit</button>\r\n            </form>\r\n            <table style={table} className=\"table\">\r\n                <thead style={{ 'background-color': 'black', color: 'white' }} >\r\n                    <tr>\r\n                        <th scope=\"col\">Name</th>\r\n                        <th scope=\"col\">Similarity</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {\r\n                        checkData.map((el, index) => (\r\n                            <tr key={index}>\r\n                                <td>{el.name}</td>\r\n                                <td>{el.similarity}</td>\r\n                            </tr>\r\n                        ))\r\n                    }\r\n                </tbody>\r\n            </table>\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\nexport default Check\r\n","C:\\Users\\DELL G3\\Desktop\\FSOFT\\Reactjs\\fsoft-test33\\src\\component\\CheckVoice\\index.js",["183"],"import React, { useState } from 'react'\r\nimport axios from 'axios'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { useForm } from 'react-hook-form'\r\nimport Swal from 'sweetalert2'\r\n\r\nconst mb = {\r\n    width: '500px',\r\n    margin: 'auto'\r\n};\r\nconst label = {\r\n    float: 'left'\r\n};\r\nconst button = {\r\n    margin: 'auto',\r\n};\r\nconst table = {\r\n    width: \"900px\",\r\n    margin: \"auto\",\r\n    position: \"relative\",\r\n    top: \"100px\"\r\n};\r\n\r\nconst CheckVoice = props => {\r\n    const history = useHistory()\r\n    const { register, handleSubmit, watch, errors } = useForm();\r\n    const users = [];\r\n    const [checkData, setData] = useState(users)\r\n    const onSubmit = dataCheck => Check(dataCheck);\r\n\r\n    const makeId = (length) => {\r\n        var result = '';\r\n        var characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\r\n        var charactersLength = characters.length;\r\n        for (var i = 0; i < length; i++) {\r\n            result += characters.charAt(Math.floor(Math.random() * charactersLength));\r\n        }\r\n        return result;\r\n    }\r\n\r\n    const Check = async (e) => {\r\n        const Data = new FormData();\r\n        Data.append('requestId', makeId(16));\r\n        Data.append('audious', e.audious1[0]);\r\n        // console.log(Data)\r\n        const dataCheck = await axios.post('http://52.221.81.214:4556/api/v1/voice/identify', Data, {\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data'\r\n            },\r\n        })\r\n\r\n        const res = dataCheck.data;\r\n        if (res.ErrorCode === 0) {\r\n            const data = res.Data;\r\n            setData(data.ls_audio[0].result);\r\n            console.log(data);\r\n        }\r\n        else {\r\n            history.push('/checkvoice')\r\n            Swal.fire(\r\n                'Giong noi khong chinh xac',\r\n                'You clicked the button!',\r\n                'error'\r\n            )\r\n        }\r\n    }\r\n    return (\r\n        <div className='container'>\r\n            <h1 style={{ paddingBottom: '50px' }} className=\"text-success\">Recognize Voice</h1>\r\n            <form onSubmit={handleSubmit(onSubmit)}>\r\n                <div className=\"mb-3\" style={mb}>\r\n                    <label style={label} htmlFor=\"formFile\" className=\"form-label\">Giọng nói</label>\r\n                    <input name='audious1' ref={register({ required: true })} className=\"form-control\" type=\"file\" id=\"formFile\" />\r\n                    <small className=\"form-text text-danger\">\r\n                        {errors.name && errors.name.type === \"required\" && <span>Vui lòng không để trống</span>}\r\n                    </small>\r\n                </div>\r\n                <button style={button} type=\"submit\" className=\"btn btn-success\">Submit</button>\r\n            </form>\r\n\r\n            <table style={table} className=\"table\">\r\n                <thead style={{ 'background-color': '#28a745', color: 'white' }} >\r\n                    <tr>\r\n                        <th scope=\"col\">ID</th>\r\n                        <th scope=\"col\">Tên</th>\r\n                        <th scope=\"col\">Score</th>\r\n\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {\r\n                        checkData.map((el, index) => (\r\n                            <tr key={index}>\r\n                                <th scope=\"row\">{el.speaker_id}</th>\r\n                                <td>{el.name}</td>\r\n                                <td>{el.score}</td>\r\n\r\n                            </tr>\r\n                        ))\r\n                    }\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    )\r\n}\r\n\r\nCheckVoice.propTypes = {\r\n\r\n}\r\n\r\nexport default CheckVoice\r\n",["184","185"],"C:\\Users\\DELL G3\\Desktop\\FSOFT\\Reactjs\\fsoft-test33\\src\\component\\RecognizeHistory\\index.js",["186","187","188","189","190"],"import React, { useState } from 'react'\r\nimport axios from 'axios'\r\nimport { useForm } from 'react-hook-form'\r\nimport { useHistory } from 'react-router-dom'\r\nimport * as FileSaver from 'file-saver';\r\nimport * as XLSX from 'xlsx';\r\n\r\nconst form = {\r\n    marginLeft: \"25px\",\r\n};\r\nconst h1 = {\r\n    \"text-align\": \"center\",\r\n    \"padding-top\": \"50px\"\r\n};\r\nconst align = {\r\n    position: \"relative\",\r\n    top: \"50px\",\r\n    left: \"85px\"\r\n};\r\nconst col = {\r\n    \"margin-top\": \"8px\",\r\n    position: \"relative\",\r\n    left: \"300px\",\r\n    top: \"-82px\"\r\n};\r\nconst table = {\r\n    width: \"900px\",\r\n    margin: \"auto\",\r\n    position: \"relative\",\r\n    top: \"100px\"\r\n};\r\nconst input = {\r\n    width: \"200px\",\r\n    position: \"relative\",\r\n}\r\nconst label = {\r\n    float: \"left\"\r\n}\r\nconst RecognizeHistory = props => {\r\n    const { register, handleSubmit, watch, errors } = useForm();\r\n    const users = [];\r\n    const [reportData, setData] = useState(users)\r\n    const onSubmit = data => search(data)\r\n\r\n    // const onSubmit = valueFrom => console.log(valueFrom);\r\n\r\n    const dataExport = [];\r\n    const search = async (e) => {\r\n        console.log(e);\r\n        const dateFrom = new Date(e.from);\r\n        const dateTo = new Date(e.to);\r\n        const unixFrom = dateFrom.getTime() / 1000;\r\n        const unixTo = dateTo.getTime() / 1000;\r\n        console.log('key');\r\n        console.log(unixFrom, unixTo);\r\n        const dataPayload = {\r\n            from: unixFrom,\r\n            to: unixTo + 86400\r\n        }\r\n        const token = e.key;\r\n        const data = await axios.post('https://ekyc-demo-api.trandata.io/api/v1/user/recognizeHistory', dataPayload, {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'apiKey': token\r\n            },\r\n        })\r\n\r\n        // exportToCSV(data.data.Data, 'test nhe');\r\n        // console.log(dataExport);\r\n        setData(data.data.Data)\r\n    }\r\n\r\n    const exportToCSV = (dataExport) => {\r\n        console.log(dataExport);\r\n        const fileType = 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8';\r\n        const fileExtension = '.xlsx';\r\n        const dateNow = new Date();\r\n\r\n        //create fileName\r\n        const dateFile = dateNow.getTime();\r\n        const fileName = 'Report-' + dateFile;\r\n\r\n        //biến đổi data theo đúng yêu cầu\r\n        const custs = [];\r\n        for (let i = 0; i < dataExport.length; i++) {\r\n            const element = dataExport[i];\r\n            custs.push({\r\n                'SST': i + 1,\r\n                'Mã': element.idNumber,\r\n                'Tên': element.name,\r\n                'Ngày': element.createdDate,\r\n                'Giờ': element.createdTime,\r\n                'So sánh': element.idMatched,\r\n                'Xác nhận': element.confirm\r\n\r\n            });\r\n        }\r\n\r\n        //Create File\r\n        const ws = XLSX.utils.json_to_sheet(custs);\r\n        const wb = { Sheets: { 'data': ws }, SheetNames: ['data'] };\r\n        const excelBuffer = XLSX.write(wb, { bookType: 'xlsx', type: 'array' });\r\n        const data = new Blob([excelBuffer], { type: fileType });\r\n        FileSaver.saveAs(data, fileName + fileExtension);\r\n    }\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <form style={form} onSubmit={handleSubmit(onSubmit)}>\r\n                <h1 style={h1} className=\"text-dark\">Recognize History</h1>\r\n                <div style={align} className=\"form-row align-items-center\">\r\n\r\n                    <div className=\"\" style={{ 'width': '900px', marginTop: '20px', 'display': 'flex', 'alignItems': 'flex-end', 'justifyContent': 'space-around' }}>\r\n\r\n                        <div className=\"form-group\" style={{ textAlign: 'left' }}>\r\n                            <label htmlFor=\"formFile\">Authen Key</label>\r\n                            <input name='key' type=\"text\" className=\"form-control\" ref={register} />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\" style={{ textAlign: 'left' }}>\r\n                            <label htmlFor=\"formFile\">Form date</label>\r\n                            <input name='from' style={input} type=\"date\" className=\"form-control\" ref={register} />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\" style={{ textAlign: 'left' }}>\r\n                            <label htmlFor=\"formFile\">To date</label>\r\n                            <input name='to' style={input} type=\"date\" className=\"form-control\" ref={register} />\r\n                        </div>\r\n                        <button type=\"submit\" className=\"btn btn-dark mb-3\">Search</button>\r\n\r\n                        <button type=\"button\" onClick={() => exportToCSV(reportData)} className=\"btn btn-dark mb-3\">Export</button>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n\r\n            <table style={table} className=\"table\">\r\n                <thead style={{ 'background-color': 'black', color: 'white' }} className=\"thead-dark\">\r\n                    <tr>\r\n                        <th scope=\"col\">ID</th>\r\n                        <th scope=\"col\">Mã</th>\r\n                        <th scope=\"col\">Tên</th>\r\n                        <th scope=\"col\">Ngày</th>\r\n                        <th scope=\"col\">Giờ</th>\r\n                        <th scope=\"col\">So sánh</th>\r\n                        <th scope=\"col\">Xác nhận</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {\r\n                        reportData.map((el, index) => (\r\n                            <tr key={index}>\r\n                                <th scope=\"row\">{el.id}</th>\r\n                                <td>{el.idNumber}</td>\r\n                                <td>{el.name}</td>\r\n                                <td>{el.createdDate}</td>\r\n                                <td>{el.createdTime}</td>\r\n                                <td>{el.idMatched}</td>\r\n                                <td>{el.confirm}</td>\r\n                            </tr>\r\n                        ))\r\n                    }\r\n\r\n\r\n                </tbody>\r\n            </table>\r\n        </div >\r\n\r\n    )\r\n}\r\n\r\nRecognizeHistory.propTypes = {\r\n\r\n}\r\n\r\nexport default RecognizeHistory\r\n","C:\\Users\\DELL G3\\Desktop\\FSOFT\\Reactjs\\fsoft-test33\\src\\component\\VerifyHistory\\index.js",["191","192","193","194","195","196"],"import React, { useEffect, useState } from 'react'\r\nimport axios from 'axios'\r\nimport { useForm } from 'react-hook-form'\r\nimport { useHistory } from 'react-router-dom'\r\nimport * as FileSaver from 'file-saver';\r\nimport * as XLSX from 'xlsx';\r\n\r\nconst form = {\r\n    marginLeft: \"25px\",\r\n};\r\nconst h1 = {\r\n    \"text-align\": \"center\",\r\n    \"padding-top\": \"50px\"\r\n};\r\nconst align = {\r\n    position: \"relative\",\r\n    top: \"50px\",\r\n    left: \"85px\"\r\n};\r\nconst col = {\r\n    \"margin-top\": \"8px\",\r\n    position: \"relative\",\r\n    left: \"300px\",\r\n    top: \"-82px\"\r\n};\r\nconst table = {\r\n    width: \"900px\",\r\n    margin: \"auto\",\r\n    position: \"relative\",\r\n    top: \"100px\"\r\n};\r\nconst input = {\r\n    width: \"200px\",\r\n    position: \"relative\",\r\n}\r\nconst label = {\r\n    float: \"left\"\r\n}\r\n\r\n\r\n\r\nconst VerifyHistory = props => {\r\n    const { register, handleSubmit, watch, errors } = useForm();\r\n    const users = [];\r\n    const [reportData, setData] = useState(users)\r\n    const onSubmit = data => search(data)\r\n\r\n    // const onSubmit = valueFrom => console.log(valueFrom);\r\n    const history = useHistory()\r\n    // useEffect(() => {\r\n    //     const getReport = async () => {\r\n    //         try {\r\n    //             const dataPayload = {\r\n    //                 from: 0,\r\n    //                 to: 0\r\n    //             }\r\n    //             const data = await axios.post('https://ekyc-demo-api.trandata.io/api/v1/user/verifyHistory', dataPayload, {\r\n    //                 headers: {\r\n    //                     'Content-Type': 'application/json'\r\n    //                 },\r\n    //             })\r\n    //             // console.log(data.data.Data);\r\n    //             setData(data.data.Data)\r\n    //             // console.log(reportData);\r\n    //         } catch (error) {\r\n    //         }\r\n    //     }\r\n    //     getReport();\r\n    // }, []);\r\n\r\n    const dataExport = [];\r\n    const search = async (e) => {\r\n        console.log(e);\r\n        const dateFrom = new Date(e.from);\r\n        const dateTo = new Date(e.to);\r\n        const unixFrom = dateFrom.getTime() / 1000;\r\n        const unixTo = dateTo.getTime() / 1000;\r\n        console.log('key');\r\n        console.log(unixFrom, unixTo);\r\n        const dataPayload = {\r\n            from: unixFrom,\r\n            to: unixTo + 86400\r\n        }\r\n        const token = e.key;\r\n        const data = await axios.post('https://ekyc-demo-api.trandata.io/api/v1/user/verifyHistory', dataPayload, {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'apiKey': token\r\n            },\r\n        })\r\n\r\n        // exportToCSV(data.data.Data, 'test nhe');\r\n        // console.log(dataExport);\r\n        setData(data.data.Data)\r\n    }\r\n\r\n    const exportToCSV = (dataExport) => {\r\n        console.log(dataExport);\r\n        const fileType = 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8';\r\n        const fileExtension = '.xlsx';\r\n        const dateNow = new Date();\r\n\r\n        //create fileName\r\n        const dateFile = dateNow.getTime();\r\n        const fileName = 'Report-' + dateFile;\r\n\r\n        //biến đổi data theo đúng yêu cầu\r\n        const custs = [];\r\n        for (let i = 0; i < dataExport.length; i++) {\r\n            const element = dataExport[i];\r\n            custs.push({\r\n                'SST': i + 1,\r\n                'Mã': element.idNumber,\r\n                'Tên': element.name,\r\n                'Ngày': element.createdDate,\r\n                'Giờ': element.createdTime,\r\n                'So sánh': element.idMatched,\r\n                'Xác nhận': element.confirm\r\n            });\r\n        }\r\n\r\n        //Create File\r\n        const ws = XLSX.utils.json_to_sheet(custs);\r\n        const wb = { Sheets: { 'data': ws }, SheetNames: ['data'] };\r\n        const excelBuffer = XLSX.write(wb, { bookType: 'xlsx', type: 'array' });\r\n        const data = new Blob([excelBuffer], { type: fileType });\r\n        FileSaver.saveAs(data, fileName + fileExtension);\r\n    }\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <form style={form} onSubmit={handleSubmit(onSubmit)}>\r\n                <h1 style={h1} className=\"text-dark\">Verify History</h1>\r\n                <div style={align} className=\"form-row align-items-center\">\r\n                    <div className=\"\" style={{ 'width': '900px', marginTop: '20px', 'display': 'flex', 'alignItems': 'flex-end', 'justifyContent': 'space-around' }}>\r\n                        <div className=\"form-group\" style={{ textAlign: 'left' }}>\r\n                            <label htmlFor=\"formFile\">Authen Key</label>\r\n                            <input name='key' type=\"text\" className=\"form-control\" ref={register} />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\" style={{ textAlign: 'left' }}>\r\n                            <label htmlFor=\"formFile\">Form date</label>\r\n                            <input name='from' style={input} type=\"date\" className=\"form-control\" ref={register} />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\" style={{ textAlign: 'left' }}>\r\n                            <label htmlFor=\"formFile\">To date</label>\r\n                            <input name='to' style={input} type=\"date\" className=\"form-control\" ref={register} />\r\n                        </div>\r\n                        <button type=\"submit\" className=\"btn btn-dark mb-3\">Search</button>\r\n\r\n                        <button type=\"button\" onClick={() => exportToCSV(reportData)} className=\"btn btn-dark mb-3\">Export</button>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n\r\n            <table style={table} className=\"table\">\r\n                <thead style={{ 'background-color': 'black', color: 'white' }} className=\"thead-dark\">\r\n                    <tr>\r\n                        <th scope=\"col\">ID</th>\r\n                        <th scope=\"col\">Mã</th>\r\n                        <th scope=\"col\">Tên</th>\r\n                        <th scope=\"col\">Ngày</th>\r\n                        <th scope=\"col\">Giờ</th>\r\n                        <th scope=\"col\">So sánh</th>\r\n                        <th scope=\"col\">Xác nhận</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {\r\n                        reportData.map((el, index) => (\r\n                            <tr key={index}>\r\n                                <th scope=\"row\">{el.id}</th>\r\n                                <td>{el.idNumber}</td>\r\n                                <td>{el.name}</td>\r\n                                <td>{el.createdDate}</td>\r\n                                <td>{el.createdTime}</td>\r\n                                <td>{el.idMatched}</td>\r\n                                <td>{el.confirm}</td>\r\n                            </tr>\r\n                        ))\r\n                    }\r\n\r\n\r\n                </tbody>\r\n            </table>\r\n        </div >\r\n\r\n    )\r\n}\r\n\r\nVerifyHistory.propTypes = {\r\n\r\n}\r\n\r\nexport default VerifyHistory\r\n","C:\\Users\\DELL G3\\Desktop\\FSOFT\\Reactjs\\fsoft-test33\\src\\component\\LayoutHistory\\index.js",["197","198","199"],"import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport VerifyHistory from '../VerifyHistory'\r\nimport RecognizeHistory from '../RecognizeHistory'\r\nimport Register from '../Register'\r\nimport Check from '../Check'\r\n\r\nconst LayoutHistory = props => {\r\n    return (\r\n        <div className='container'>\r\n            <nav>\r\n                <div className=\"nav nav-tabs\" id=\"nav-tab\" role=\"tablist\">\r\n                    <a style={{ position: 'relative', left: '470px', color: \"#495057\" }} className=\"nav-item nav-link active\" id=\"nav-home-tab\" data-toggle=\"tab\" href=\"#nav-home\" role=\"tab\" aria-controls=\"nav-home\" aria-selected=\"true\">Register</a>\r\n                    <a style={{ color: \"#495057\", position: 'relative', left: '470px' }} className=\"nav-item nav-link\" id=\"nav-profile-tab\" data-toggle=\"tab\" href=\"#nav-profile\" role=\"tab\" aria-controls=\"nav-profile\" aria-selected=\"false\">Recognize</a>\r\n                </div>\r\n            </nav>\r\n            <div className=\"tab-content\" style={{ marginTop: '20px' }} id=\"nav-tabContent\">\r\n                <div className=\"tab-pane fade show active\" id=\"nav-home\" role=\"tabpanel\" aria-labelledby=\"nav-home-tab\">\r\n                    <Register />\r\n                </div>\r\n                <div className=\"tab-pane fade\" id=\"nav-profile\" role=\"tabpanel\" aria-labelledby=\"nav-profile-tab\">\r\n                    <Check />\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nLayoutHistory.propTypes = {\r\n\r\n}\r\n\r\nexport default LayoutHistory\r\n","C:\\Users\\DELL G3\\Desktop\\FSOFT\\Reactjs\\face-demo\\src\\index.js",[],["200","201"],"C:\\Users\\DELL G3\\Desktop\\FSOFT\\Reactjs\\face-demo\\src\\reportWebVitals.js",[],"C:\\Users\\DELL G3\\Desktop\\FSOFT\\Reactjs\\face-demo\\src\\App.js",[],"C:\\Users\\DELL G3\\Desktop\\FSOFT\\Reactjs\\face-demo\\src\\routers\\index.js",["202"],"C:\\Users\\DELL G3\\Desktop\\FSOFT\\Reactjs\\face-demo\\src\\component\\Register\\index.js",["203"],"C:\\Users\\DELL G3\\Desktop\\FSOFT\\Reactjs\\face-demo\\src\\component\\VerifyHistory\\index.js",["204","205","206","207","208","209"],"C:\\Users\\DELL G3\\Desktop\\FSOFT\\Reactjs\\face-demo\\src\\component\\Check\\index.js",["210","211","212","213","214","215","216","217","218","219","220"],"import React, { useState, useModal } from 'react'\r\nimport axios from 'axios'\r\nimport { Link } from 'react-router-dom';\r\nimport { useForm } from 'react-hook-form'\r\nimport Swal from 'sweetalert2'\r\nimport Zoom from 'react-medium-image-zoom'\r\nimport 'react-medium-image-zoom/dist/styles.css'\r\nimport ReactDOM from \"react-dom\";\r\nimport { Modal, Button } from \"react-bootstrap\";\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\n\r\n\r\nconst mb = {\r\n    width: '500px',\r\n    margin: 'auto'\r\n};\r\nconst button = {\r\n    margin: 'auto',\r\n    marginTop: \"15px\"\r\n};\r\nconst table = {\r\n    width: \"900px\",\r\n    margin: \"auto\",\r\n    position: \"relative\",\r\n    top: \"100px\"\r\n};\r\nconst img = {\r\n    maxWidth: \"70px\",\r\n    display: \"block\",\r\n    margin: \"0 auto\"\r\n}\r\n\r\nconst Check = props => {\r\n    const { register, handleSubmit, watch, errors } = useForm();\r\n    const users = [];\r\n    const [checkData, setData] = useState(users);\r\n    const [picture, setPicture] = useState(null);\r\n    const [open, setOpen] = useState(false);\r\n    const [imgData, setImgData] = useState(null);\r\n    const [lightMode, setLightMode] = React.useState(false)\r\n\r\n    const onSubmit = dataCheck => addCheck(dataCheck);\r\n\r\n    const addCheck = async (e) => {\r\n        const Data = new FormData();\r\n        Data.append('image', e.image[0]);\r\n        const dataCheck = await axios.post('https://facedemo-api.dev.trandata.io/api/v1/facedemo/recognition', Data, {\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data'\r\n            },\r\n        })\r\n        const res = dataCheck.data;\r\n        if (res.ErrorCode === 0) {\r\n\r\n            const data = res.Data;\r\n            if (data.faces.length > 0) {\r\n                setData(data.faces);\r\n                console.log(data);\r\n                drawImage(data.faces[0].box[0], data.faces[0].box[1], data.faces[0].box[2], data.faces[0].box[3]);\r\n            } else {\r\n                setData([]);\r\n                Swal.fire(\r\n                    'Not found!',\r\n                    '',\r\n                    'error'\r\n                )\r\n            }\r\n        } else {\r\n            Swal.fire(\r\n                'The image is not correct!',\r\n                '',\r\n                'error'\r\n            )\r\n        }\r\n    }\r\n\r\n    //upload file ảnh\r\n    const onChangePicture = e => {\r\n        if (e.target.files[0]) {\r\n            setPicture(e.target.files[0]);\r\n            const reader = new FileReader();\r\n            reader.addEventListener(\"load\", () => {\r\n                setImgData(reader.result);\r\n            });\r\n            reader.readAsDataURL(e.target.files[0]);\r\n        }\r\n    }\r\n\r\n    // ve anh truoc khi submit\r\n    const handleImageLoad = (event) => {\r\n        const { target } = event;\r\n        let counter = 0;\r\n        //khi submit sẽ upload ảnh của hàm done\r\n        const done = () => {\r\n            // const imageHeight = target.clientHeight;\r\n            // const imageWidth = target.clientWidth;\r\n            const img = document.getElementById(\"scream\");\r\n            const imageHeight = img.height;\r\n            const imageWidth = img.width;\r\n            loadImage(imageHeight, imageWidth, img)\r\n        };\r\n        done();\r\n    };\r\n\r\n    //ve anh\r\n    const loadImage = (imageHeight, imageWidth, img) => {\r\n        const c = document.getElementById(\"myCanvas\");\r\n        const ctx = c.getContext(\"2d\");\r\n        c.width = imageWidth;\r\n        c.height = imageHeight;\r\n        ctx.drawImage(img, 0, 0);\r\n    }\r\n\r\n    // ve anh sau khi co data\r\n    const drawImage = (x_min, y_min, x_max, y_max) => {\r\n        const c = document.getElementById(\"myCanvas\");\r\n        const ctx = c.getContext(\"2d\");\r\n        ctx.beginPath();\r\n        ctx.rect(x_min, y_min, x_max - x_min, y_max - y_min);\r\n        ctx.lineWidth = 7;\r\n        ctx.strokeStyle = 'red';\r\n        ctx.stroke();\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <h1 className=\"text-dark\">Recognize</h1>\r\n            <form onSubmit={handleSubmit(onSubmit)}>\r\n                <div className=\"mb-3\" style={mb}>\r\n\r\n                    <label htmlFor=\"formFile\" className=\"form-label\">Images</label>\r\n                    <input ref=\"window\" onChange={onChangePicture} name='image' ref={register({ required: true })} className=\"form-control\" type=\"file\" id=\"formFile\" />\r\n                    <div className=\"previewProfilePic\" style={{ marginLeft: \"90px\" }}>\r\n                        {/* <img className=\"playerProfilePic_home_tile\" style={{ marginTop: '18px', objectFit: 'cover' }} width={200} height={260} src={imgData} /> */}\r\n                    </div>\r\n\r\n                    <small className=\"form-text text-danger\">\r\n                        {errors.name && errors.name.type === \"required\" && <span>Vui lòng không để trống</span>}\r\n                    </small>\r\n                </div>\r\n                <div >\r\n                    <img id=\"scream\" style={{ display: 'none' }} src={imgData} onLoad={handleImageLoad} />\r\n                    <canvas style={{ width: '150px' }} id=\"myCanvas\" />\r\n                </div>\r\n                <button style={button} type=\"submit\" className=\"btn btn-dark\">Submit</button>\r\n            </form>\r\n            <table style={table} className=\"table\">\r\n                <thead style={{ 'background-color': 'black', color: 'white' }} >\r\n                    <tr>\r\n                        <th scope=\"col\">Name</th>\r\n                        <th scope=\"col\">Similarity</th>\r\n                        <th scope=\"col\">Images</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {\r\n                        checkData.map((el, index) => (\r\n                            <tr key={index}>\r\n                                <td>\r\n                                    <a variant=\"primary\" onClick={() => setOpen(true)}>\r\n                                        {el.name}\r\n\r\n                                    </a>\r\n                                    <Modal show={open} onHide={() => setOpen(false)}>\r\n                                        <Modal.Header closeButton>\r\n                                            <Modal.Title>Personal information</Modal.Title>\r\n                                        </Modal.Header>\r\n                                        <Modal.Body>\r\n\r\n                                            ID: {el.faceInfo.id},\r\n                                            <br />\r\n                                            Họ tên: {el.faceInfo.fullname},\r\n                                            <br />\r\n                                            Ngày sinh: {el.faceInfo.dob},\r\n                                            <br />\r\n                                            Địa chỉ: {el.faceInfo.address},\r\n                                            <br />\r\n                                            Giới tính: {el.faceInfo.gender},\r\n\r\n\r\n\r\n                                        </Modal.Body>\r\n                                        <Modal.Footer>\r\n                                            <Button variant=\"secondary\" onClick={() => setOpen(false)}>\r\n                                                Close\r\n                                             </Button>\r\n\r\n                                        </Modal.Footer>\r\n                                    </Modal>\r\n\r\n\r\n\r\n                                </td>\r\n                                <td>{Math.round(el.similarity * 10000) / 100}%</td>\r\n                                <td>\r\n                                    <Zoom>\r\n                                        <img\r\n                                            alt=\"\"\r\n                                            src={el.image}\r\n                                            width=\"50\"\r\n                                        />\r\n                                    </Zoom>\r\n                                </td>\r\n\r\n                            </tr>\r\n\r\n                        ))\r\n                    }\r\n                </tbody>\r\n            </table>\r\n\r\n\r\n        </div >\r\n    )\r\n}\r\nconst rootElement = document.getElementById(\"root\");\r\nReactDOM.render(<Check />, rootElement);\r\nexport default Check\r\n","C:\\Users\\DELL G3\\Desktop\\FSOFT\\Reactjs\\face-demo\\src\\component\\LayoutHistory\\index.js",["221","222","223"],"C:\\Users\\DELL G3\\Desktop\\FSOFT\\Reactjs\\face-demo\\src\\component\\Voice\\index.js",["224"],"C:\\Users\\DELL G3\\Desktop\\FSOFT\\Reactjs\\face-demo\\src\\component\\RecognizeHistory\\index.js",["225","226","227","228","229"],"C:\\Users\\DELL G3\\Desktop\\FSOFT\\Reactjs\\face-demo\\src\\component\\CheckVoice\\index.js",["230"],{"ruleId":"231","replacedBy":"232"},{"ruleId":"233","replacedBy":"234"},{"ruleId":"235","severity":1,"message":"236","line":2,"column":50,"nodeType":"237","messageId":"238","endLine":2,"endColumn":54},{"ruleId":"235","severity":1,"message":"239","line":27,"column":37,"nodeType":"237","messageId":"238","endLine":27,"endColumn":42},{"ruleId":"235","severity":1,"message":"239","line":27,"column":37,"nodeType":"237","messageId":"238","endLine":27,"endColumn":42},{"ruleId":"240","severity":1,"message":"241","line":44,"column":60,"nodeType":"242","messageId":"243","endLine":44,"endColumn":61},{"ruleId":"235","severity":1,"message":"236","line":2,"column":50,"nodeType":"237","messageId":"238","endLine":2,"endColumn":54},{"ruleId":"235","severity":1,"message":"244","line":1,"column":17,"nodeType":"237","messageId":"238","endLine":1,"endColumn":26},{"ruleId":"235","severity":1,"message":"245","line":22,"column":7,"nodeType":"237","messageId":"238","endLine":22,"endColumn":10},{"ruleId":"235","severity":1,"message":"239","line":45,"column":37,"nodeType":"237","messageId":"238","endLine":45,"endColumn":42},{"ruleId":"235","severity":1,"message":"246","line":45,"column":44,"nodeType":"237","messageId":"238","endLine":45,"endColumn":50},{"ruleId":"235","severity":1,"message":"247","line":51,"column":11,"nodeType":"237","messageId":"238","endLine":51,"endColumn":18},{"ruleId":"235","severity":1,"message":"248","line":73,"column":11,"nodeType":"237","messageId":"238","endLine":73,"endColumn":21},{"ruleId":"235","severity":1,"message":"239","line":28,"column":37,"nodeType":"237","messageId":"238","endLine":28,"endColumn":42},{"ruleId":"235","severity":1,"message":"239","line":34,"column":37,"nodeType":"237","messageId":"238","endLine":34,"endColumn":42},{"ruleId":"235","severity":1,"message":"249","line":36,"column":12,"nodeType":"237","messageId":"238","endLine":36,"endColumn":22},{"ruleId":"235","severity":1,"message":"250","line":36,"column":24,"nodeType":"237","messageId":"238","endLine":36,"endColumn":31},{"ruleId":"231","replacedBy":"251"},{"ruleId":"233","replacedBy":"252"},{"ruleId":"235","severity":1,"message":"236","line":2,"column":50,"nodeType":"237","messageId":"238","endLine":2,"endColumn":54},{"ruleId":"235","severity":1,"message":"253","line":3,"column":8,"nodeType":"237","messageId":"238","endLine":3,"endColumn":16},{"ruleId":"235","severity":1,"message":"254","line":4,"column":8,"nodeType":"237","messageId":"238","endLine":4,"endColumn":13},{"ruleId":"235","severity":1,"message":"255","line":5,"column":8,"nodeType":"237","messageId":"238","endLine":5,"endColumn":21},{"ruleId":"235","severity":1,"message":"256","line":6,"column":8,"nodeType":"237","messageId":"238","endLine":6,"endColumn":24},{"ruleId":"235","severity":1,"message":"257","line":8,"column":8,"nodeType":"237","messageId":"238","endLine":8,"endColumn":13},{"ruleId":"235","severity":1,"message":"258","line":9,"column":8,"nodeType":"237","messageId":"238","endLine":9,"endColumn":18},{"ruleId":"235","severity":1,"message":"239","line":25,"column":37,"nodeType":"237","messageId":"238","endLine":25,"endColumn":42},{"ruleId":"235","severity":1,"message":"239","line":28,"column":37,"nodeType":"237","messageId":"238","endLine":28,"endColumn":42},{"ruleId":"235","severity":1,"message":"239","line":22,"column":37,"nodeType":"237","messageId":"238","endLine":22,"endColumn":42},{"ruleId":"235","severity":1,"message":"259","line":25,"column":12,"nodeType":"237","messageId":"238","endLine":25,"endColumn":19},{"ruleId":"235","severity":1,"message":"260","line":67,"column":17,"nodeType":"237","messageId":"238","endLine":67,"endColumn":23},{"ruleId":"235","severity":1,"message":"261","line":68,"column":13,"nodeType":"237","messageId":"238","endLine":68,"endColumn":20},{"ruleId":"262","severity":1,"message":"263","line":108,"column":81,"nodeType":"264","endLine":108,"endColumn":115},{"ruleId":"265","severity":1,"message":"266","line":118,"column":21,"nodeType":"267","endLine":118,"endColumn":107},{"ruleId":"235","severity":1,"message":"239","line":26,"column":37,"nodeType":"237","messageId":"238","endLine":26,"endColumn":42},{"ruleId":"231","replacedBy":"268"},{"ruleId":"233","replacedBy":"269"},{"ruleId":"235","severity":1,"message":"270","line":4,"column":10,"nodeType":"237","messageId":"238","endLine":4,"endColumn":20},{"ruleId":"235","severity":1,"message":"245","line":20,"column":7,"nodeType":"237","messageId":"238","endLine":20,"endColumn":10},{"ruleId":"235","severity":1,"message":"239","line":40,"column":37,"nodeType":"237","messageId":"238","endLine":40,"endColumn":42},{"ruleId":"235","severity":1,"message":"246","line":40,"column":44,"nodeType":"237","messageId":"238","endLine":40,"endColumn":50},{"ruleId":"235","severity":1,"message":"248","line":47,"column":11,"nodeType":"237","messageId":"238","endLine":47,"endColumn":21},{"ruleId":"235","severity":1,"message":"244","line":1,"column":17,"nodeType":"237","messageId":"238","endLine":1,"endColumn":26},{"ruleId":"235","severity":1,"message":"245","line":20,"column":7,"nodeType":"237","messageId":"238","endLine":20,"endColumn":10},{"ruleId":"235","severity":1,"message":"239","line":43,"column":37,"nodeType":"237","messageId":"238","endLine":43,"endColumn":42},{"ruleId":"235","severity":1,"message":"246","line":43,"column":44,"nodeType":"237","messageId":"238","endLine":43,"endColumn":50},{"ruleId":"235","severity":1,"message":"247","line":49,"column":11,"nodeType":"237","messageId":"238","endLine":49,"endColumn":18},{"ruleId":"235","severity":1,"message":"248","line":71,"column":11,"nodeType":"237","messageId":"238","endLine":71,"endColumn":21},{"ruleId":"235","severity":1,"message":"271","line":2,"column":8,"nodeType":"237","messageId":"238","endLine":2,"endColumn":17},{"ruleId":"235","severity":1,"message":"255","line":3,"column":8,"nodeType":"237","messageId":"238","endLine":3,"endColumn":21},{"ruleId":"235","severity":1,"message":"256","line":4,"column":8,"nodeType":"237","messageId":"238","endLine":4,"endColumn":24},{"ruleId":"231","replacedBy":"272"},{"ruleId":"233","replacedBy":"273"},{"ruleId":"235","severity":1,"message":"236","line":2,"column":50,"nodeType":"237","messageId":"238","endLine":2,"endColumn":54},{"ruleId":"235","severity":1,"message":"239","line":25,"column":37,"nodeType":"237","messageId":"238","endLine":25,"endColumn":42},{"ruleId":"235","severity":1,"message":"244","line":1,"column":17,"nodeType":"237","messageId":"238","endLine":1,"endColumn":26},{"ruleId":"235","severity":1,"message":"245","line":20,"column":7,"nodeType":"237","messageId":"238","endLine":20,"endColumn":10},{"ruleId":"235","severity":1,"message":"239","line":43,"column":37,"nodeType":"237","messageId":"238","endLine":43,"endColumn":42},{"ruleId":"235","severity":1,"message":"246","line":43,"column":44,"nodeType":"237","messageId":"238","endLine":43,"endColumn":50},{"ruleId":"235","severity":1,"message":"247","line":49,"column":11,"nodeType":"237","messageId":"238","endLine":49,"endColumn":18},{"ruleId":"235","severity":1,"message":"248","line":71,"column":11,"nodeType":"237","messageId":"238","endLine":71,"endColumn":21},{"ruleId":"235","severity":1,"message":"274","line":1,"column":27,"nodeType":"237","messageId":"238","endLine":1,"endColumn":35},{"ruleId":"235","severity":1,"message":"236","line":3,"column":10,"nodeType":"237","messageId":"238","endLine":3,"endColumn":14},{"ruleId":"235","severity":1,"message":"239","line":34,"column":37,"nodeType":"237","messageId":"238","endLine":34,"endColumn":42},{"ruleId":"235","severity":1,"message":"259","line":37,"column":12,"nodeType":"237","messageId":"238","endLine":37,"endColumn":19},{"ruleId":"235","severity":1,"message":"275","line":40,"column":12,"nodeType":"237","messageId":"238","endLine":40,"endColumn":21},{"ruleId":"235","severity":1,"message":"276","line":40,"column":23,"nodeType":"237","messageId":"238","endLine":40,"endColumn":35},{"ruleId":"235","severity":1,"message":"260","line":91,"column":17,"nodeType":"237","messageId":"238","endLine":91,"endColumn":23},{"ruleId":"235","severity":1,"message":"261","line":92,"column":13,"nodeType":"237","messageId":"238","endLine":92,"endColumn":20},{"ruleId":"262","severity":1,"message":"263","line":138,"column":81,"nodeType":"264","endLine":138,"endColumn":115},{"ruleId":"265","severity":1,"message":"266","line":148,"column":21,"nodeType":"267","endLine":148,"endColumn":107},{"ruleId":"277","severity":1,"message":"278","line":166,"column":37,"nodeType":"267","endLine":166,"endColumn":88},{"ruleId":"235","severity":1,"message":"271","line":2,"column":8,"nodeType":"237","messageId":"238","endLine":2,"endColumn":17},{"ruleId":"235","severity":1,"message":"255","line":3,"column":8,"nodeType":"237","messageId":"238","endLine":3,"endColumn":21},{"ruleId":"235","severity":1,"message":"256","line":4,"column":8,"nodeType":"237","messageId":"238","endLine":4,"endColumn":24},{"ruleId":"235","severity":1,"message":"239","line":28,"column":37,"nodeType":"237","messageId":"238","endLine":28,"endColumn":42},{"ruleId":"235","severity":1,"message":"270","line":4,"column":10,"nodeType":"237","messageId":"238","endLine":4,"endColumn":20},{"ruleId":"235","severity":1,"message":"245","line":20,"column":7,"nodeType":"237","messageId":"238","endLine":20,"endColumn":10},{"ruleId":"235","severity":1,"message":"239","line":40,"column":37,"nodeType":"237","messageId":"238","endLine":40,"endColumn":42},{"ruleId":"235","severity":1,"message":"246","line":40,"column":44,"nodeType":"237","messageId":"238","endLine":40,"endColumn":50},{"ruleId":"235","severity":1,"message":"248","line":47,"column":11,"nodeType":"237","messageId":"238","endLine":47,"endColumn":21},{"ruleId":"235","severity":1,"message":"239","line":26,"column":37,"nodeType":"237","messageId":"238","endLine":26,"endColumn":42},"no-native-reassign",["279"],"no-negated-in-lhs",["280"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'watch' is assigned a value but never used.","no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","'useEffect' is defined but never used.","'col' is assigned a value but never used.","'errors' is assigned a value but never used.","'history' is assigned a value but never used.","'dataExport' is assigned a value but never used.","'reportData' is assigned a value but never used.","'setData' is assigned a value but never used.",["279"],["280"],"'Register' is defined but never used.","'Check' is defined but never used.","'VerifyHistory' is defined but never used.","'RecognizeHistory' is defined but never used.","'Voice' is defined but never used.","'CheckVoice' is defined but never used.","'picture' is assigned a value but never used.","'target' is assigned a value but never used.","'counter' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["279"],["280"],"'useHistory' is defined but never used.","'PropTypes' is defined but never used.",["279"],["280"],"'useModal' is defined but never used.","'lightMode' is assigned a value but never used.","'setLightMode' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","no-global-assign","no-unsafe-negation"]